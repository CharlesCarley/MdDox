<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="a02111" kind="class" language="C++" prot="public">
    <compoundname>MdDox::Xml::Node</compoundname>
    <derivedcompoundref refid="a01895" prot="public" virt="non-virtual">MdDox::GraphNode</derivedcompoundref>
    <includes local="no">Source/Xml/Node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="a02111_1a49824e1be14454c30f40e6326960d97e" prot="private" static="no" mutable="no">
        <type><ref refid="a01846_1a0b1831d2f6bb20e16b0298d1b90feb4d" kindref="member">AttributeMap</ref></type>
        <definition>AttributeMap MdDox::Xml::Node::_attributes</definition>
        <argsstring></argsstring>
        <name>_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="74" column="1" bodyfile="Source/Xml/Node.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1aefcbd7fd3633a3caa86f992f694f4fca" prot="private" static="no" mutable="no">
        <type><ref refid="a01846_1aacf07cb68e25a8fa469b0b5063a38e0c" kindref="member">NodeArray</ref></type>
        <definition>NodeArray MdDox::Xml::Node::_children</definition>
        <argsstring></argsstring>
        <name>_children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="77" column="1" bodyfile="Source/Xml/Node.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1ad0ed61bad907bc0da4e82945dbcb1b25" prot="private" static="no" mutable="no">
        <type><ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref></type>
        <definition>String MdDox::Xml::Node::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="71" column="1" bodyfile="Source/Xml/Node.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1a4a86474e6d943e38472db5c6368e8428" prot="private" static="no" mutable="no">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node* MdDox::Xml::Node::_next</definition>
        <argsstring></argsstring>
        <name>_next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="76" column="1" bodyfile="Source/Xml/Node.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1a108ad32d4d9d0c4ffed945a165edd244" prot="private" static="no" mutable="no">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node* MdDox::Xml::Node::_parent</definition>
        <argsstring></argsstring>
        <name>_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="75" column="1" bodyfile="Source/Xml/Node.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1a66f6c15c1542f25b35da3e3615f6e023" prot="private" static="no" mutable="no">
        <type><ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref></type>
        <definition>String MdDox::Xml::Node::_text</definition>
        <argsstring></argsstring>
        <name>_text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="72" column="1" bodyfile="Source/Xml/Node.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="a02111_1a09ca5fa4c0a5e6a60a5be82ac1b69f8a" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t MdDox::Xml::Node::_typeCode</definition>
        <argsstring></argsstring>
        <name>_typeCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="73" column="1" bodyfile="Source/Xml/Node.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="a02111_1a4df38fbccf3c5aaea8bb43cfcb58aa9b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::_autoDelete</definition>
        <argsstring></argsstring>
        <name>_autoDelete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="80" column="1" bodyfile="Source/Xml/Node.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="a02111_1aca71abf00d43782a922933bc7d4aec2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MdDox::Xml::Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="86" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="32" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a80fdda29892a61ea96f1855312830504" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>MdDox::Xml::Node::Node</definition>
        <argsstring>(String name)</argsstring>
        <name>Node</name>
        <param>
          <type><ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a node with a name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name to associate with this node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="92" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1aa4305357352d028f2ff0e31685f3ee53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MdDox::Xml::Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <briefdescription>
<para>Default destructor. </para>        </briefdescription>
        <detaileddescription>
<para>Deletes all child nodes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="99" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="49" bodyend="56"/>
        <references refid="a02111_1a4df38fbccf3c5aaea8bb43cfcb58aa9b" compoundref="a01250" startline="80">_autoDelete</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a208a5c60b47b7fa3c13de7c997351972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::addChild</definition>
        <argsstring>(Node *child)</argsstring>
        <name>addChild</name>
        <param>
          <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Appends a child node to the current list of children, and sets the child node&apos;s parent to the current instance. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>The node to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="106" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="58" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1ab412278d4e2bdfade1e9fa45fd6768c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::at</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>at</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Provides access to the child node at the supplied index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the child node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The node at the supplied index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="119" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="71" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1ac65bb68aafa6e0889052adad248c6481" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>const Node * MdDox::Xml::Node::at</definition>
        <argsstring>(const size_t &amp;idx) const</argsstring>
        <name>at</name>
        <param>
          <type>const size_t &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Provides access to the child node at the supplied index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the child node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The node at the supplied index. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="124" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
        <definition>const String &amp; MdDox::Xml::Node::attribute</definition>
        <argsstring>(const String &amp;name, const String &amp;def=&quot;&quot;) const</argsstring>
        <name>attribute</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>def</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Looks up the supplied name in the attribute map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The search term </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value if the search fails. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The found attribute value on success, otherwise returns the default value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="223" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="109" bodyend="115"/>
        <references refid="a02111_1af0c11e088103f304dc0e28fccccf105e" compoundref="a01250" startline="280" endline="283">name</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a2b9c690324ebb34535cb2f41a3c4cace" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01846_1a0b1831d2f6bb20e16b0298d1b90feb4d" kindref="member">AttributeMap</ref> &amp;</type>
        <definition>const AttributeMap &amp; MdDox::Xml::Node::attributes</definition>
        <argsstring>() const</argsstring>
        <name>attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="186" column="1" bodyfile="Source/Xml/Node.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1aca46484307f43cd0fb3c7263827ffa36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01846_1aacf07cb68e25a8fa469b0b5063a38e0c" kindref="member">NodeArray</ref> &amp;</type>
        <definition>const NodeArray &amp; MdDox::Xml::Node::children</definition>
        <argsstring>() const</argsstring>
        <name>children</name>
        <briefdescription>
<para>Provides access to the array of child nodes attached to this node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const access to the array of children. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="112" column="1" bodyfile="Source/Xml/Node.h" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a4416339f625f6f3057a265e8a355a458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::contains</definition>
        <argsstring>(const String &amp;attribute)</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="188" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="87" bodyend="91"/>
        <references refid="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" compoundref="a01247" startline="109" endline="115">attribute</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a80fc8e1401910987742533404ff32638" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="a02111" kindref="compound">Node</ref> &amp;</type>
        <definition>const Node &amp; MdDox::Xml::Node::firstChild</definition>
        <argsstring>() const</argsstring>
        <name>firstChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference to the first element in the _children vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="199" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="177" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1ae3a0ac5394abbac021ed9bc51802105f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::firstChildOf</definition>
        <argsstring>(const String &amp;tag)</argsstring>
        <name>firstChildOf</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="205" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="231" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1add1af0fb2e1a5e62d0ca9871eccac544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::firstChildOf</definition>
        <argsstring>(const int64_t &amp;tag)</argsstring>
        <name>firstChildOf</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="207" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="268" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a351e5efc578e2af82cec5e6edbfff72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::firstParentOf</definition>
        <argsstring>(const String &amp;tag)</argsstring>
        <name>firstParentOf</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="209" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="244" bodyend="254"/>
        <references refid="a02111_1a9d5753492b09c134f7c9401729cff881" compoundref="a01247" startline="125" endline="133">isTypeOf</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a1c496e70eb43a65c61ee1c5d58bd392f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::firstParentOf</definition>
        <argsstring>(const int64_t &amp;tag)</argsstring>
        <name>firstParentOf</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="211" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="256" bodyend="266"/>
        <references refid="a02111_1a9d5753492b09c134f7c9401729cff881" compoundref="a01247" startline="125" endline="133">isTypeOf</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1ab38a9a4aaa25a138918401ea97a1180e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
        <definition>const String &amp; MdDox::Xml::Node::get</definition>
        <argsstring>(const String &amp;attribute)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="192" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="100" bodyend="107"/>
        <references refid="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" compoundref="a01247" startline="109" endline="115">attribute</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a40236f07810dc8800e95fada2cc09ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::getFirstChild</definition>
        <argsstring>(const String &amp;requireType)</argsstring>
        <name>getFirstChild</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>requireType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="201" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="184" bodyend="206"/>
        <references refid="a02111_1af0c11e088103f304dc0e28fccccf105e" compoundref="a01250" startline="280" endline="283">name</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1ab9c5ef38f588a8ae17d1b45ea1797fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::getFirstChild</definition>
        <argsstring>(const int64_t &amp;requireType)</argsstring>
        <name>getFirstChild</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>requireType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="203" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="208" bodyend="229"/>
        <references refid="a02111_1a321280cbd46dac12918a0de34c009720" compoundref="a01250" startline="315" endline="318">getTypeCode</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a321280cbd46dac12918a0de34c009720" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t MdDox::Xml::Node::getTypeCode</definition>
        <argsstring>() const</argsstring>
        <name>getTypeCode</name>
        <briefdescription>
<para>Provides access to any type code associated with the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="179" column="1" bodyfile="Source/Xml/Node.h" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a5e712a998e0507036835fe5b2ccd254b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::hasAttributes</definition>
        <argsstring>() const</argsstring>
        <name>hasAttributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the node has attributes attached to it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="265" column="1" bodyfile="Source/Xml/Node.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a756a2b737aa4083208589a7ee6d35d6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::hasChild</definition>
        <argsstring>(const char *str)</argsstring>
        <name>hasChild</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Preforms a linear search over of all child nodes and matches the node&apos;s name with the supplied string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the search parameter. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on the first match otherwise false. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="255" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1aa349bddf51e8b625d2404778f57873ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::hasChildren</definition>
        <argsstring>() const</argsstring>
        <name>hasChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the _children member is not empty </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="247" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1ac45b67b9f89a5576d08008b2f2ad2ed1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::hasText</definition>
        <argsstring>() const</argsstring>
        <name>hasText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the node has any text data associated with it. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="260" column="1" bodyfile="Source/Xml/Node.h" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a6171d66e4ccac877114a9dcea2950a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::insert</definition>
        <argsstring>(const String &amp;attribute, const String &amp;value)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>attribute</declname>
        </param>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="190" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="93" bodyend="98"/>
        <references refid="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" compoundref="a01247" startline="109" endline="115">attribute</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1af5396b174492eaed6d8566442df57554" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t MdDox::Xml::Node::integer</definition>
        <argsstring>(const String &amp;name, int64_t def=-1) const</argsstring>
        <name>integer</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>def</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Looks up the supplied name in the attribute map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The search term </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>The default value if the search fails. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The found attribute value on success, otherwise returns the default value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="228" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="117" bodyend="123"/>
        <references refid="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" compoundref="a01247" startline="109" endline="115">attribute</references>
        <references refid="a02111_1af0c11e088103f304dc0e28fccccf105e" compoundref="a01250" startline="280" endline="283">name</references>
        <references refid="a02023_1a313ba0faa8c51cf6015437248d9e9016" compoundref="a01148" startline="83" endline="90">MdDox::Char::toInt64</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a9d5753492b09c134f7c9401729cff881" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::isTypeOf</definition>
        <argsstring>(const char *tagName) const</argsstring>
        <name>isTypeOf</name>
        <param>
          <type>const char *</type>
          <declname>tagName</declname>
        </param>
        <briefdescription>
<para>Compares the supplied string with the internal tag name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tagName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the XML tag to test for equality. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the two match. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="235" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="125" bodyend="133"/>
        <references refid="a02023_1adbfa0ed00df7a3807ed71f4e3f4fee7f" compoundref="a01148" startline="41" endline="50">MdDox::Char::equals</references>
        <references refid="a02023_1a5b40b89b3198fcfa306a09047d3803e0" compoundref="a01148" startline="36" endline="39">MdDox::Char::length</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1af3856f265f659975722e3dc2d0ba902d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MdDox::Xml::Node::isTypeOf</definition>
        <argsstring>(int64_t type) const</argsstring>
        <name>isTypeOf</name>
        <param>
          <type>int64_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Compares the supplied string with the internal tag name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the XML tag to test for equality. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the two match. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="242" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1af0c11e088103f304dc0e28fccccf105e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
        <definition>const String &amp; MdDox::Xml::Node::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The name associated with this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="141" column="1" bodyfile="Source/Xml/Node.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a770676dddec389533501d27e6aa8fe7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::nextSiblingOf</definition>
        <argsstring>(const String &amp;tag) const</argsstring>
        <name>nextSiblingOf</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="213" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="278" bodyend="291"/>
        <references refid="a02111_1a9d5753492b09c134f7c9401729cff881" compoundref="a01247" startline="125" endline="133">isTypeOf</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1ab4f10f3a1137837fb067493ef1f8c7da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::nextSiblingOf</definition>
        <argsstring>(const int64_t &amp;tag) const</argsstring>
        <name>nextSiblingOf</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="215" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="293" bodyend="303"/>
        <references refid="a02111_1a9d5753492b09c134f7c9401729cff881" compoundref="a01247" startline="125" endline="133">isTypeOf</references>
      </memberdef>
      <memberdef kind="function" id="a02111_1a6ca6b702ea2c5cebede8d75776b35191" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="a02111" kindref="compound">Node</ref> *</type>
        <definition>Node * MdDox::Xml::Node::parent</definition>
        <argsstring>() const</argsstring>
        <name>parent</name>
        <briefdescription>
<para>Provides access to this nodes parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>All nodes except the root node have a parent. </para></simplesect>
<simplesect kind="return"><para>The parent node of this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="136" column="1" bodyfile="Source/Xml/Node.h" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1adfad587ec429e52c9140c76d0b6f83c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::setTypeCode</definition>
        <argsstring>(int64_t code)</argsstring>
        <name>setTypeCode</name>
        <param>
          <type>int64_t</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Associates a type code for this node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="184" column="1" bodyfile="Source/Xml/Node.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a155387e434a57ea107317a8a41ed5a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::siblingsOf</definition>
        <argsstring>(NodeArray &amp;, const String &amp;tag)</argsstring>
        <name>siblingsOf</name>
        <param>
          <type><ref refid="a01846_1aacf07cb68e25a8fa469b0b5063a38e0c" kindref="member">NodeArray</ref> &amp;</type>
          <defname>dest</defname>
        </param>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="194" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="165" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1af7516023a308caa444e5da160689cd9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MdDox::Xml::Node::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of children attached to this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="129" column="1" bodyfile="Source/Xml/Node.h" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1aa85495a564a50bb46cd0df3489a1dd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::sort</definition>
        <argsstring>(const NodeSortFunc &amp;fnc)</argsstring>
        <name>sort</name>
        <param>
          <type>const <ref refid="a01846_1a010a26f3b7d0ee89ab19eab357474ca9" kindref="member">NodeSortFunc</ref> &amp;</type>
          <declname>fnc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="267" column="1" bodyfile="Source/Xml/Node.cpp" bodystart="158" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1ab85578367da69da2df67971b9420726a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
        <definition>const String &amp; MdDox::Xml::Node::text</definition>
        <argsstring>() const</argsstring>
        <name>text</name>
        <briefdescription>
<para>Provides access to plan text content associated with this node. </para>        </briefdescription>
        <detaileddescription>
<para>Any text that is placed in between tags gets pushed to the list of children for a specific node. It is defined by the name <computeroutput>_text_node</computeroutput> </para><para><bold>For example:</bold> <programlisting filename=".xml"><codeline><highlight class="normal">&lt;</highlight><highlight class="keywordtype">root</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">foo</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">A</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">b</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">B</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">b</highlight><highlight class="normal">&gt;</highlight><highlight class="keyword">C</highlight><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">foo</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/</highlight><highlight class="keywordtype">root</highlight><highlight class="normal">&gt;</highlight></codeline>
</programlisting></para><para>Would be defined as <programlisting filename=".txt"><codeline><highlight class="normal">-root</highlight></codeline>
<codeline><highlight class="normal">--foo</highlight></codeline>
<codeline><highlight class="normal">---_text_node</highlight></codeline>
<codeline><highlight class="normal">---b</highlight></codeline>
<codeline><highlight class="normal">----_text_node</highlight></codeline>
<codeline><highlight class="normal">---_text_node</highlight></codeline>
</programlisting> <simplesect kind="return"><para>Any text associated with this node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="168" column="1" bodyfile="Source/Xml/Node.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="a02111_1a5ef5cf3675c04702677dce3cbf767803" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MdDox::Xml::Node::text</definition>
        <argsstring>(const String &amp;text)</argsstring>
        <name>text</name>
        <param>
          <type>const <ref refid="a01838_1a7639eaccaedfad528ef1dc0002de943e" kindref="member">String</ref> &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Provides the ability to set the inner text on the node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text to store in the node. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Source/Xml/Node.h" line="174" column="1" bodyfile="Source/Xml/Node.h" bodystart="290" bodyend="293"/>
        <references refid="a02111_1ab85578367da69da2df67971b9420726a" compoundref="a01250" startline="285" endline="288">text</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides an unbounded N-ary tree structure to store an XML document. </para>    </briefdescription>
    <detaileddescription>
<para>A node represents a single XML tag. As such, a node in a tree can have only one parent and (N) number of descendant nodes. Each node in the tree is allowed to have any number of attributes attached to it.<linebreak/>
<linebreak/>
 In order to keep the internal text inlined with tag based nodes, the parser creates a specialty node with the name <computeroutput>_text_node</computeroutput>. The text node is pushed as an extra child node to the current node on the top of the parse stack.<linebreak/>
<linebreak/>
 To keep this library generic, all attributes are defined as a string, and any extra type of serialization is undefined. With one exception, an optional type filter can be applied before parsing the file. The filter allows integer type info to be associated with node, which allows nodes be type-checked with integers instead of strings. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1027">
        <label>MdDox::GraphNode</label>
        <link refid="a01895"/>
        <childnode refid="1026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1026">
        <label>MdDox::Xml::Node</label>
        <link refid="a02111"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1028">
        <label>MdDox::Xml::Node</label>
        <link refid="a02111"/>
        <childnode refid="1029" relation="usage">
          <edgelabel>_autoDelete</edgelabel>
        </childnode>
      </node>
      <node id="1029">
        <label>bool</label>
      </node>
    </collaborationgraph>
    <location file="Source/Xml/Node.h" line="69" column="1" bodyfile="Source/Xml/Node.h" bodystart="68" bodyend="268"/>
    <listofallmembers>
      <member refid="a02111_1a49824e1be14454c30f40e6326960d97e" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_attributes</name></member>
      <member refid="a02111_1a4df38fbccf3c5aaea8bb43cfcb58aa9b" prot="protected" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_autoDelete</name></member>
      <member refid="a02111_1aefcbd7fd3633a3caa86f992f694f4fca" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_children</name></member>
      <member refid="a02111_1ad0ed61bad907bc0da4e82945dbcb1b25" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_name</name></member>
      <member refid="a02111_1a4a86474e6d943e38472db5c6368e8428" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_next</name></member>
      <member refid="a02111_1a108ad32d4d9d0c4ffed945a165edd244" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_parent</name></member>
      <member refid="a02111_1a66f6c15c1542f25b35da3e3615f6e023" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_text</name></member>
      <member refid="a02111_1a09ca5fa4c0a5e6a60a5be82ac1b69f8a" prot="private" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>_typeCode</name></member>
      <member refid="a02111_1a208a5c60b47b7fa3c13de7c997351972" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>addChild</name></member>
      <member refid="a02111_1ab412278d4e2bdfade1e9fa45fd6768c2" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>at</name></member>
      <member refid="a02111_1ac65bb68aafa6e0889052adad248c6481" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>at</name></member>
      <member refid="a02111_1a17c4d3328d9ea41d2fffeb946b2aac12" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>attribute</name></member>
      <member refid="a02111_1a2b9c690324ebb34535cb2f41a3c4cace" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>attributes</name></member>
      <member refid="a02111_1aca46484307f43cd0fb3c7263827ffa36" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>children</name></member>
      <member refid="a02111_1a4416339f625f6f3057a265e8a355a458" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>contains</name></member>
      <member refid="a02111_1a80fc8e1401910987742533404ff32638" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>firstChild</name></member>
      <member refid="a02111_1ae3a0ac5394abbac021ed9bc51802105f" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>firstChildOf</name></member>
      <member refid="a02111_1add1af0fb2e1a5e62d0ca9871eccac544" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>firstChildOf</name></member>
      <member refid="a02111_1a351e5efc578e2af82cec5e6edbfff72d" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>firstParentOf</name></member>
      <member refid="a02111_1a1c496e70eb43a65c61ee1c5d58bd392f" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>firstParentOf</name></member>
      <member refid="a02111_1ab38a9a4aaa25a138918401ea97a1180e" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>get</name></member>
      <member refid="a02111_1a40236f07810dc8800e95fada2cc09ef5" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>getFirstChild</name></member>
      <member refid="a02111_1ab9c5ef38f588a8ae17d1b45ea1797fa3" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>getFirstChild</name></member>
      <member refid="a02111_1a321280cbd46dac12918a0de34c009720" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>getTypeCode</name></member>
      <member refid="a02111_1a5e712a998e0507036835fe5b2ccd254b" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>hasAttributes</name></member>
      <member refid="a02111_1a756a2b737aa4083208589a7ee6d35d6c" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>hasChild</name></member>
      <member refid="a02111_1aa349bddf51e8b625d2404778f57873ef" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>hasChildren</name></member>
      <member refid="a02111_1ac45b67b9f89a5576d08008b2f2ad2ed1" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>hasText</name></member>
      <member refid="a02111_1a6171d66e4ccac877114a9dcea2950a53" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>insert</name></member>
      <member refid="a02111_1af5396b174492eaed6d8566442df57554" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>integer</name></member>
      <member refid="a02111_1a9d5753492b09c134f7c9401729cff881" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>isTypeOf</name></member>
      <member refid="a02111_1af3856f265f659975722e3dc2d0ba902d" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>isTypeOf</name></member>
      <member refid="a02111_1af0c11e088103f304dc0e28fccccf105e" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>name</name></member>
      <member refid="a02111_1a770676dddec389533501d27e6aa8fe7e" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>nextSiblingOf</name></member>
      <member refid="a02111_1ab4f10f3a1137837fb067493ef1f8c7da" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>nextSiblingOf</name></member>
      <member refid="a02111_1aca71abf00d43782a922933bc7d4aec2e" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>Node</name></member>
      <member refid="a02111_1a80fdda29892a61ea96f1855312830504" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>Node</name></member>
      <member refid="a02111_1a6ca6b702ea2c5cebede8d75776b35191" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>parent</name></member>
      <member refid="a02111_1adfad587ec429e52c9140c76d0b6f83c7" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>setTypeCode</name></member>
      <member refid="a02111_1a155387e434a57ea107317a8a41ed5a98" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>siblingsOf</name></member>
      <member refid="a02111_1af7516023a308caa444e5da160689cd9e" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>size</name></member>
      <member refid="a02111_1aa85495a564a50bb46cd0df3489a1dd54" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>sort</name></member>
      <member refid="a02111_1ab85578367da69da2df67971b9420726a" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>text</name></member>
      <member refid="a02111_1a5ef5cf3675c04702677dce3cbf767803" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>text</name></member>
      <member refid="a02111_1aa4305357352d028f2ff0e31685f3ee53" prot="public" virt="non-virtual"><scope>MdDox::Xml::Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
